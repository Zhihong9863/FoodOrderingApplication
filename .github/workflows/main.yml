name: Continuous Integration and Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Lint
      run: npm run lint

    - name: Build
      run: npm run build

    - name: Run tests
      run: npm test

    - name: Lowercase repo name
      id: repo_name
      run: echo "REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV


    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ghcr.io/${{ env.REPO_NAME }}/food-ordering-app:latest
          ghcr.io/${{ env.REPO_NAME }}/food-ordering-app:${{ github.sha }}

  deploy-to-firebase:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
  
    # New step to set up Google Credentials
    - name: Set up Google Cloud credentials
      run: |
        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}" | base64 -d > "$HOME/gcloud.json"
        echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json" >> $GITHUB_ENV
      shell: bash
  
    - name: Clear Cache and Reinstall Dependencies
      run: |
        cd functions
        rm -rf node_modules package-lock.json 
        npm install                           
  
    - name: Login to Firebase and Deploy
      uses: w9jds/firebase-action@master
      with:
        args: deploy
      env:
        GCP_SA_KEY: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64}}

  create-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
  
    - name: Extract version from package.json
      run: echo "VERSION=$(cat package.json | jq -r .version)" >> $GITHUB_ENV
      shell: bash
  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
        
      
